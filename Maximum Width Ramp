class Solution {
public:
    int maxWidthRamp(vector<int>& nums) {
        int n = nums.size();
        vector<int> stack;
        
        // Build monotonic decreasing stack of indices
        for (int i = 0; i < n; i++) {
            if (stack.empty() || nums[i] < nums[stack.back()]) {
                stack.push_back(i);
            }
        }
        
        int maxWidth = 0;
        
        // Iterate from right to left
        for (int i = n - 1; i >= 0; i--) {
            while (!stack.empty() && nums[i] >= nums[stack.back()]) {
                maxWidth = max(maxWidth, i - stack.back());
                stack.pop_back();
            }
            
            if (stack.empty()) break;
        }
        
        return maxWidth;
    }
};
