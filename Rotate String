class Solution {
public:
    bool rotateString(string s, string goal) {
        // If lengths are different, rotation is impossible
        if (s.length() != goal.length()) 
            return false;
        
        // If strings are empty, they're equal (true)
        if (s.length() == 0) 
            return true;
        
        // Concatenate s with itself
        // This will contain all possible rotations
        string temp = s + s;
        
        // If goal is a substring of temp, then goal is a rotation of s
        return temp.find(goal) != string::npos;
    }
};
