class Solution {
public:
    vector<int> getMaximumXor(vector<int>& nums, int maximumBit) {
        int n = nums.size();
        vector<int> answer(n);
        
        // Step 1: Compute the initial cumulative XOR of all elements in nums
        int cumulative_xor = 0;
        for (int num : nums) {
            cumulative_xor ^= num;
        }
        
        // max_val is the maximum value we can achieve with maximumBit bits
        int max_val = (1 << maximumBit) - 1;

        // Step 2: Process each query
        for (int i = 0; i < n; ++i) {
            // Compute k as the value that maximizes the XOR with cumulative_xor
            answer[i] = cumulative_xor ^ max_val;
            
            // Remove the last element of nums (from the cumulative XOR)
            cumulative_xor ^= nums[n - 1 - i];
        }
        
        return answer;
    }
};
