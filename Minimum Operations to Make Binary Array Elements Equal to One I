class Solution {
public:
    int minOperations(vector<int>& nums) {
        int n = nums.size();
        if (n < 3) return -1;
        
        int operations = 0;
        vector<int> flips(n, 0);
        
        // Process the array from left to right
        for (int i = 0; i < n - 2; i++) {
            if ((nums[i] + flips[i]) % 2 == 0) {
                // Current element is 0, need to flip
                operations++;
                flips[i]++;
                flips[i+1]++;
                flips[i+2]++;
            }
        }
        
        // Check the last two elements
        if ((nums[n-2] + flips[n-2]) % 2 == 0 || (nums[n-1] + flips[n-1]) % 2 == 0) {
            return -1;
        }
        
        return operations;
    }
};
