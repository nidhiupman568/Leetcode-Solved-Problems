class Solution {
public:
    string nearestPalindromic(string n) {
        long long num = stoll(n);
        long long len = n.length();
        
        vector<long long> candidates;
        candidates.push_back(pow(10, len) + 1);
        candidates.push_back(pow(10, len - 1) - 1);
        
        long long prefix = stoll(n.substr(0, (len + 1) / 2));
        for (int i : {-1, 0, 1}) {
            string p = to_string(prefix + i);
            string pp = p + string(p.rbegin() + (len & 1), p.rend());
            candidates.push_back(stoll(pp));
        }
        
        long long ans = LLONG_MAX;
        long long minDiff = LLONG_MAX;
        
        for (long long cand : candidates) {
            if (cand != num) {
                if (abs(cand - num) < minDiff || (abs(cand - num) == minDiff && cand < ans)) {
                    minDiff = abs(cand - num);
                    ans = cand;
                }
            }
        }
        
        return to_string(ans);
    }
};
